{"ast":null,"code":"var _jsxFileName = \"/home/carlos/Documents/GitHub/mern-ecommerce/frontend/src/screens/ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport Axios from 'axios';\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Button from 'react-bootstrap/Button';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport Form from 'react-bootstrap/Form';\nimport { toast } from 'react-toastify';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        loading: false\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    case 'UPDATE_REQUEST':\n      return { ...state,\n        loadingUpdate: true\n      };\n\n    case 'UPDATE_SUCCESS':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    case 'UPDATE_FAIL':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function ProfileScreen() {\n  _s();\n\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const [{\n    loading,\n    error,\n    loadingUpdate\n  }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: ''\n  });\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isSeller, setIsSeller] = useState('');\n  const [sellerName, setSellerName] = useState('');\n  const [sellerLogo, setSellerLogo] = useState('');\n  const [sellerDescription, setSellerDescription] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({\n        type: 'FETCH_REQUEST'\n      });\n\n      try {\n        const {\n          data\n        } = await Axios.get(`/api/users/${userInfo._id}`, {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`\n          }\n        });\n        setName(data.name);\n        setEmail(data.email);\n\n        if (data.seller) {\n          setIsSeller(data.isSeller);\n          setSellerName(data.seller.name);\n          setSellerLogo(data.seller.logo);\n          setSellerDescription(data.seller.description);\n        }\n\n        dispatch({\n          type: 'FETCH_SUCCESS'\n        });\n      } catch (error) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(error)\n        });\n      }\n    };\n\n    fetchData();\n  }, [dispatch, userInfo]);\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    dispatch({\n      type: 'UPDATE_REQUEST'\n    });\n\n    try {\n      if (password !== confirmPassword) {\n        toast.error('Passwords do not match');\n      } else {\n        const {\n          data\n        } = await Axios.put('/api/users/profile', {\n          name,\n          email,\n          password,\n          sellerName,\n          sellerLogo,\n          sellerDescription\n        }, {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`\n          }\n        });\n        dispatch({\n          type: 'UPDATE_SUCCESS'\n        });\n        ctxDispatch({\n          type: 'USER_SIGNIN',\n          payload: data\n        });\n        localStorage.setItem('userInfo', JSON.stringify(data));\n        toast.success('User updated successfully');\n      }\n    } catch (error) {\n      toast.error(getError(error));\n      dispatch({\n        type: 'UPDATE_FAIL'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-3\",\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), isSeller && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Seller\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"sellerName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"seller Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: sellerName,\n            onChange: e => setSellerName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"sellerLogo\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Seller Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: sellerLogo,\n            onChange: e => setSellerLogo(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"sellerLogo\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Seller Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: sellerLogo,\n            onChange: e => setSellerLogo(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingTextarea\",\n          label: \"Comments\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            placeholder: \"Leave a comment here\",\n            value: sellerDescription,\n            onChange: e => setSellerDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: loadingUpdate,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileScreen, \"d4FaorIF46y7rp+K/z3IJM8c3BU=\");\n\n_c = ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["/home/carlos/Documents/GitHub/mern-ecommerce/frontend/src/screens/ProfileScreen.js"],"names":["Axios","React","useContext","useEffect","useReducer","useState","Helmet","Button","FloatingLabel","Form","toast","LoadingBox","MessageBox","Store","getError","reducer","state","action","type","loading","error","payload","loadingUpdate","ProfileScreen","dispatch","ctxDispatch","userInfo","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","isSeller","setIsSeller","sellerName","setSellerName","sellerLogo","setSellerLogo","sellerDescription","setSellerDescription","fetchData","data","get","_id","headers","Authorization","token","seller","logo","description","submitHandler","e","preventDefault","put","localStorage","setItem","JSON","stringify","success","target","value"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Button from 'react-bootstrap/Button';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport Form from 'react-bootstrap/Form';\nimport { toast } from 'react-toastify';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'UPDATE_REQUEST':\n      return { ...state, loadingUpdate: true };\n    case 'UPDATE_SUCCESS':\n      return { ...state, loadingUpdate: false };\n    case 'UPDATE_FAIL':\n      return { ...state, loadingUpdate: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default function ProfileScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n\n  const [{ loading, error, loadingUpdate }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: '',\n  });\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isSeller, setIsSeller] = useState('');\n  const [sellerName, setSellerName] = useState('');\n  const [sellerLogo, setSellerLogo] = useState('');\n  const [sellerDescription, setSellerDescription] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_REQUEST' });\n      try {\n        const { data } = await Axios.get(`/api/users/${userInfo._id}`, {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        setName(data.name);\n        setEmail(data.email);\n        if (data.seller) {\n          setIsSeller(data.isSeller);\n          setSellerName(data.seller.name);\n          setSellerLogo(data.seller.logo);\n          setSellerDescription(data.seller.description);\n        }\n        dispatch({ type: 'FETCH_SUCCESS' });\n      } catch (error) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(error),\n        });\n      }\n    };\n    fetchData();\n  }, [dispatch, userInfo]);\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    dispatch({ type: 'UPDATE_REQUEST' });\n    try {\n      if (password !== confirmPassword) {\n        toast.error('Passwords do not match');\n      } else {\n        const { data } = await Axios.put(\n          '/api/users/profile',\n          {\n            name,\n            email,\n            password,\n            sellerName,\n            sellerLogo,\n            sellerDescription,\n          },\n          {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n          }\n        );\n        dispatch({\n          type: 'UPDATE_SUCCESS',\n        });\n\n        ctxDispatch({ type: 'USER_SIGNIN', payload: data });\n        localStorage.setItem('userInfo', JSON.stringify(data));\n        toast.success('User updated successfully');\n      }\n    } catch (error) {\n      toast.error(getError(error));\n      dispatch({ type: 'UPDATE_FAIL' });\n    }\n  };\n\n  return (\n    <div className=\"container small-container\">\n      <Helmet>\n        <title>User Profile</title>\n      </Helmet>\n      <h1 className=\"my-3\">User Profile</h1>\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <form onSubmit={submitHandler}>\n          <Form.Group className=\"mb-3\" controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"name\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"password\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          {isSeller && (\n            <>\n              <h2>Seller</h2>\n\n              <Form.Group className=\"mb-3\" controlId=\"sellerName\">\n                <Form.Label>seller Name</Form.Label>\n                <Form.Control\n                  value={sellerName}\n                  onChange={(e) => setSellerName(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"sellerLogo\">\n                <Form.Label>Seller Logo</Form.Label>\n                <Form.Control\n                  value={sellerLogo}\n                  onChange={(e) => setSellerLogo(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"sellerLogo\">\n                <Form.Label>Seller Logo</Form.Label>\n                <Form.Control\n                  value={sellerLogo}\n                  onChange={(e) => setSellerLogo(e.target.value)}\n                  required\n                />\n              </Form.Group>\n              <FloatingLabel\n                controlId=\"floatingTextarea\"\n                label=\"Comments\"\n                className=\"mb-3\"\n              >\n                <Form.Control\n                  as=\"textarea\"\n                  placeholder=\"Leave a comment here\"\n                  value={sellerDescription}\n                  onChange={(e) => setSellerDescription(e.target.value)}\n                />\n              </FloatingLabel>\n            </>\n          )}\n          <div className=\"mb-3\">\n            <Button type=\"submit\" disabled={loadingUpdate}>\n              Update\n            </Button>\n          </div>\n          {loadingUpdate && <LoadingBox></LoadingBox>}\n        </form>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}