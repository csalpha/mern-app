{"ast":null,"code":"var _jsxFileName = \"/home/carlos/Documents/GitHub/mern-app/frontend/src/screens/SignupScreen.js\",\n    _s = $RefreshSig$();\n\nimport Axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignupScreen() {\n  _s();\n\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState(''); // useLocation - is a hook from react-router-dom\n  // search - is a object inside useLocation\n\n  const {\n    search\n  } = useLocation(); // from the search get there redirectInUrl \n  // by instancing URLSearchParams and passing the search object\n  // and get the redirect from the query string\n\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\n  const redirect = redirectInUrl ? redirectInUrl : '/'; // get state and ctxDispatch from useContext\n\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store); // get user info from state\n\n  const {\n    userInfo\n  } = state;\n\n  const submitHandler = async e => {\n    // prevent refreshing the page\n    e.preventDefault();\n\n    try {\n      if (password !== confirmPassword) {\n        toast.error('Passwords do not match');\n      } else {\n        const {\n          data\n        } = await Axios.post('/api/users/signup', // pass user object\n        {\n          name,\n          email,\n          password\n        });\n        ctxDispatch({\n          type: 'USER_SIGNIN',\n          payload: data\n        });\n        localStorage.setItem('userInfo', JSON.stringify(data));\n        navigate(redirect || '/');\n      }\n    } catch (err) {\n      toast.error(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, userInfo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-3\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"confirmPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: `/signin?redirect=${redirect}`,\n          children: \"Sign-In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignupScreen, \"6FweXY8PhwuGy/e0N8qdlbqUl8g=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = SignupScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupScreen\");","map":{"version":3,"sources":["/home/carlos/Documents/GitHub/mern-app/frontend/src/screens/SignupScreen.js"],"names":["Axios","React","useContext","useEffect","useState","Helmet","Button","Form","Link","useNavigate","useLocation","toast","Store","getError","SignupScreen","navigate","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","search","redirectInUrl","URLSearchParams","get","redirect","state","dispatch","ctxDispatch","userInfo","submitHandler","e","preventDefault","error","data","post","type","payload","localStorage","setItem","JSON","stringify","err","target","value"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\n\nexport default function SignupScreen() {\n\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n// useLocation - is a hook from react-router-dom\n  // search - is a object inside useLocation\n  const { search } = useLocation();\n\n  \n  // from the search get there redirectInUrl \n  // by instancing URLSearchParams and passing the search object\n  // and get the redirect from the query string\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\n  const redirect = redirectInUrl ? redirectInUrl : '/';\n\n  // get state and ctxDispatch from useContext\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  \n  // get user info from state\n  const { userInfo } = state;\n\n  const submitHandler = async (e) => \n  {\n    // prevent refreshing the page\n    e.preventDefault();\n\n    \n    try \n    {\n      \n      if (password !== confirmPassword) {\n        toast.error('Passwords do not match');\n      } else {\n        const { data } = await Axios.post('/api/users/signup', \n        // pass user object\n        {\n          name,\n          email,\n          password,\n        });\n\n        \n        ctxDispatch(\n        { \n            type: 'USER_SIGNIN', \n            payload: data \n        });\n\n\n        localStorage.setItem('userInfo', JSON.stringify(data));\n        \n        navigate(redirect || '/');\n      }\n    } catch (err) {\n      toast.error(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, userInfo]);\n\n  return (\n    <div className=\"container small-container\">\n      <Helmet>\n        <title>Sign Up</title>\n      </Helmet>\n      <h1 className=\"my-3\">Sign Up</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control onChange={(e) => setName(e.target.value)} required />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n          />\n        </Form.Group>\n\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Sign Up</Button>\n        </div>\n        <div className=\"mb-3\">\n          Already have an account?{' '}\n          <Link to={`/signin?redirect=${redirect}`}>Sign-In</Link>\n        </div>\n      </Form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}