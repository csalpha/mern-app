{"ast":null,"code":"var _jsxFileName = \"/home/carlos/Documents/GitHub/mern-ecommerce/frontend/src/screens/SupportScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { Helmet } from 'react-helmet-async';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet allUsers = [];\nlet allMessages = [];\nlet allSelectedUser = {};\nconst ENDPOINT = window.location.host.indexOf('localhost') >= 0 ? 'http://127.0.0.1:5000' : window.location.host;\nexport default function SupportScreen() {\n  _s();\n\n  const [selectedUser, setSelectedUser] = useState({});\n  const [socket, setSocket] = useState(null);\n  const uiMessagesRef = useRef(null);\n  const [messageBody, setMessageBody] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  useEffect(() => {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: 'smooth'\n      });\n    }\n\n    if (!socket) {\n      const sk = socketIOClient(ENDPOINT);\n      setSocket(sk);\n      sk.emit('onLogin', {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin\n      });\n      sk.on('message', data => {\n        if (allSelectedUser._id === data._id) {\n          allMessages = [...allMessages, data];\n        } else {\n          const existUser = allUsers.find(user => user._id === data._id);\n\n          if (existUser) {\n            allUsers = allUsers.map(user => user._id === existUser._id ? { ...user,\n              unread: true\n            } : user);\n            setUsers(allUsers);\n          }\n        }\n\n        setMessages(allMessages);\n      });\n      sk.on('updateUser', updatedUser => {\n        const existUser = allUsers.find(user => user._id === updatedUser._id);\n\n        if (existUser) {\n          allUsers = allUsers.map(user => user._id === existUser._id ? updatedUser : user);\n          setUsers(allUsers);\n        } else {\n          allUsers = [...allUsers, updatedUser];\n          setUsers(allUsers);\n        }\n      });\n      sk.on('listUsers', updatedUsers => {\n        allUsers = updatedUsers;\n        setUsers(allUsers);\n      });\n      sk.on('selectUser', user => {\n        allMessages = user.messages;\n        setMessages(allMessages);\n      });\n    }\n  }, [messages, socket, users, userInfo]);\n\n  const selectUser = user => {\n    allSelectedUser = user;\n    setSelectedUser(allSelectedUser);\n    const existUser = allUsers.find(x => x._id === user._id);\n\n    if (existUser) {\n      allUsers = allUsers.map(x => x._id === existUser._id ? { ...x,\n        unread: false\n      } : x);\n      setUsers(allUsers);\n    }\n\n    socket.emit('onUserSelected', user);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (!messageBody.trim()) {\n      alert('Error. Please type message.');\n    } else {\n      allMessages = [...allMessages, {\n        body: messageBody,\n        name: userInfo.name\n      }];\n      setMessages(allMessages);\n      setMessageBody('');\n      setTimeout(() => {\n        socket.emit('onMessage', {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          _id: selectedUser._id\n        });\n      }, 1000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"top full-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Support\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      className: \"support-users\",\n      children: [users.filter(x => x._id !== userInfo._id).length === 0 && /*#__PURE__*/_jsxDEV(MessageBox, {\n        children: \"No Online User Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.filter(x => x._id !== userInfo._id).map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: user._id === selectedUser._id ? '  selected' : '  ',\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            varaint: \"light\",\n            type: \"button\",\n            onClick: () => selectUser(user),\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: user.unread ? 'unread' : user.online ? 'online' : 'offline'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      className: \"support-messages\",\n      children: !selectedUser._id ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        children: \"Select a user to start chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Chat with \", selectedUser.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          ref: uiMessagesRef,\n          children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No message.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 41\n          }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: `${msg.name}: `\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this), \" \", msg.body]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: submitHandler,\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"text\",\n                value: messageBody,\n                onChange: e => setMessageBody(e.target.value),\n                placeholder: \"type message\",\n                \"aria-describedby\": \"button-search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SupportScreen, \"WrNEkzEY8X2xS/4bf9jKJN8+NR0=\");\n\n_c = SupportScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SupportScreen\");","map":{"version":3,"sources":["/home/carlos/Documents/GitHub/mern-ecommerce/frontend/src/screens/SupportScreen.js"],"names":["React","useContext","useEffect","useRef","useState","socketIOClient","Row","Col","FormControl","InputGroup","Button","MessageBox","Store","Helmet","allUsers","allMessages","allSelectedUser","ENDPOINT","window","location","host","indexOf","SupportScreen","selectedUser","setSelectedUser","socket","setSocket","uiMessagesRef","messageBody","setMessageBody","messages","setMessages","users","setUsers","state","userInfo","current","scrollBy","top","clientHeight","left","behavior","sk","emit","_id","name","isAdmin","on","data","existUser","find","user","map","unread","updatedUser","updatedUsers","selectUser","x","submitHandler","e","preventDefault","trim","alert","body","setTimeout","filter","length","online","msg","index","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { Helmet } from 'react-helmet-async';\n\nlet allUsers = [];\nlet allMessages = [];\nlet allSelectedUser = {};\nconst ENDPOINT =\n  window.location.host.indexOf('localhost') >= 0\n    ? 'http://127.0.0.1:5000'\n    : window.location.host;\n\nexport default function SupportScreen() {\n  const [selectedUser, setSelectedUser] = useState({});\n  const [socket, setSocket] = useState(null);\n  const uiMessagesRef = useRef(null);\n  const [messageBody, setMessageBody] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n\n  useEffect(() => {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n\n    if (!socket) {\n      const sk = socketIOClient(ENDPOINT);\n      setSocket(sk);\n      sk.emit('onLogin', {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin,\n      });\n      sk.on('message', (data) => {\n        if (allSelectedUser._id === data._id) {\n          allMessages = [...allMessages, data];\n        } else {\n          const existUser = allUsers.find((user) => user._id === data._id);\n          if (existUser) {\n            allUsers = allUsers.map((user) =>\n              user._id === existUser._id ? { ...user, unread: true } : user\n            );\n            setUsers(allUsers);\n          }\n        }\n        setMessages(allMessages);\n      });\n      sk.on('updateUser', (updatedUser) => {\n        const existUser = allUsers.find((user) => user._id === updatedUser._id);\n        if (existUser) {\n          allUsers = allUsers.map((user) =>\n            user._id === existUser._id ? updatedUser : user\n          );\n          setUsers(allUsers);\n        } else {\n          allUsers = [...allUsers, updatedUser];\n          setUsers(allUsers);\n        }\n      });\n      sk.on('listUsers', (updatedUsers) => {\n        allUsers = updatedUsers;\n        setUsers(allUsers);\n      });\n      sk.on('selectUser', (user) => {\n        allMessages = user.messages;\n        setMessages(allMessages);\n      });\n    }\n  }, [messages, socket, users, userInfo]);\n\n  const selectUser = (user) => {\n    allSelectedUser = user;\n    setSelectedUser(allSelectedUser);\n    const existUser = allUsers.find((x) => x._id === user._id);\n    if (existUser) {\n      allUsers = allUsers.map((x) =>\n        x._id === existUser._id ? { ...x, unread: false } : x\n      );\n      setUsers(allUsers);\n    }\n    socket.emit('onUserSelected', user);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (!messageBody.trim()) {\n      alert('Error. Please type message.');\n    } else {\n      allMessages = [\n        ...allMessages,\n        { body: messageBody, name: userInfo.name },\n      ];\n      setMessages(allMessages);\n      setMessageBody('');\n      setTimeout(() => {\n        socket.emit('onMessage', {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          _id: selectedUser._id,\n        });\n      }, 1000);\n    }\n  };\n\n  return (\n    <Row className=\"top full-container\">\n      <Helmet>\n        <title>Support</title>\n      </Helmet>\n      <Col md={3} className=\"support-users\">\n        {users.filter((x) => x._id !== userInfo._id).length === 0 && (\n          <MessageBox>No Online User Found</MessageBox>\n        )}\n        <ul>\n          {users\n            .filter((x) => x._id !== userInfo._id)\n            .map((user) => (\n              <li\n                key={user._id}\n                className={user._id === selectedUser._id ? '  selected' : '  '}\n              >\n                <Button\n                  varaint=\"light\"\n                  type=\"button\"\n                  onClick={() => selectUser(user)}\n                >\n                  {user.name}\n                </Button>\n                <span\n                  className={\n                    user.unread ? 'unread' : user.online ? 'online' : 'offline'\n                  }\n                />\n              </li>\n            ))}\n        </ul>\n      </Col>\n      <Col md={9} className=\"support-messages\">\n        {!selectedUser._id ? (\n          <MessageBox>Select a user to start chat</MessageBox>\n        ) : (\n          <div>\n            <Row>\n              <strong>Chat with {selectedUser.name} </strong>\n            </Row>\n            <ul ref={uiMessagesRef}>\n              {messages.length === 0 && <li>No message.</li>}\n              {messages.map((msg, index) => (\n                <li key={index}>\n                  <strong>{`${msg.name}: `}</strong> {msg.body}\n                </li>\n              ))}\n            </ul>\n            <div>\n              <form onSubmit={submitHandler} className=\"row\">\n                <InputGroup>\n                  <FormControl\n                    type=\"text\"\n                    value={messageBody}\n                    onChange={(e) => setMessageBody(e.target.value)}\n                    placeholder=\"type message\"\n                    aria-describedby=\"button-search\"\n                  />\n                  <Button type=\"submit\">Send</Button>\n                </InputGroup>\n              </form>\n            </div>\n          </div>\n        )}\n      </Col>\n    </Row>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}