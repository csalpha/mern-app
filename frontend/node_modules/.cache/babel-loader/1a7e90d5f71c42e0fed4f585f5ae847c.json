{"ast":null,"code":"var _jsxFileName = \"/home/carlos/Documents/GitHub/mern-app/frontend/src/Store.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from 'react'; // import logger from 'use-reducer-logger';\n// i wanna use react context to save the cart items in a global state\n// and use it in Components\n// Create Store\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Store = /*#__PURE__*/createContext(); // define initialState\n\nconst initialState = {}; // define reducer\n\nfunction reducer(state, action) {} // StoreProvider - is a Wrapper for React App and pass global props to children\n\n\nexport function StoreProvider(props) {\n  _s();\n\n  // define useReducer\n  const [state, dispatch] = useReducer(reducer, initialState); // define value object\n  // the value contain current state in the context and \n  // the dispatch to update state in the context\n\n  const value = {\n    state,\n    dispatch\n  }; // return Store ( is comming from react context )\n  // get Provider from the Store object\n  // render {props.children}\n\n  return /*#__PURE__*/_jsxDEV(Store.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}\n\n_s(StoreProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = StoreProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"sources":["/home/carlos/Documents/GitHub/mern-app/frontend/src/Store.js"],"names":["createContext","useReducer","Store","initialState","reducer","state","action","StoreProvider","props","dispatch","value","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C,C,CACA;AAEA;AACA;AAEA;;;AACA,OAAO,MAAMC,KAAK,gBAAGF,aAAa,EAA3B,C,CAEP;;AACA,MAAMG,YAAY,GAAG,EAArB,C,CAIA;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC,CAE/B,C,CAED;;;AACA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAEnC;AACA,QAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBR,UAAU,CAClCG,OADkC,EAElCD,YAFkC,CAApC,CAHmC,CAQnC;AACA;AACA;;AACA,QAAMO,KAAK,GAAG;AAAEL,IAAAA,KAAF;AAASI,IAAAA;AAAT,GAAd,CAXmC,CAanC;AACA;AACA;;AACA,sBAAO,QAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEC,KAAvB;AAAA,cAA+BF,KAAK,CAACG;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAjBeJ,a;;KAAAA,a","sourcesContent":["import { createContext, useReducer } from 'react';\n// import logger from 'use-reducer-logger';\n\n// i wanna use react context to save the cart items in a global state\n// and use it in Components\n\n// Create Store\nexport const Store = createContext();\n\n// define initialState\nconst initialState = {\n\n};\n\n// define reducer\nfunction reducer(state, action) {\n\n}\n\n// StoreProvider - is a Wrapper for React App and pass global props to children\nexport function StoreProvider(props) {\n\n  // define useReducer\n  const [state, dispatch] = useReducer(\n    reducer,\n    initialState\n  );\n\n  // define value object\n  // the value contain current state in the context and \n  // the dispatch to update state in the context\n  const value = { state, dispatch };\n\n  // return Store ( is comming from react context )\n  // get Provider from the Store object\n  // render {props.children}\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n}\n"]},"metadata":{},"sourceType":"module"}