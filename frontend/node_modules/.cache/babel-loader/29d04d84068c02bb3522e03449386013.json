{"ast":null,"code":"var _jsxFileName = \"/home/carlos/Documents/GitHub/mern-ecommerce/frontend/src/screens/ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Store } from '../Store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        product: action.payload,\n        loading: false\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n}; // // const reducer = (state, action) => {\n// //   switch (action.type) {\n// //     case 'REFRESH_PRODUCT':\n// //       return { ...state, product: action.payload };\n// //     case 'FETCH_REQUEST':\n// //       return { ...state, loading: true };\n// //     case 'FETCH_SUCCESS':\n// //       return { ...state, product: action.payload, loading: false };\n// //     case 'FETCH_FAIL':\n// //       return { ...state, loading: false, error: action.payload };\n// //     case 'CREATE_REQUEST':\n// //       return { ...state, loadingCreateReview: true };\n// //     case 'CREATE_SUCCESS':\n// //       return { ...state, loadingCreateReview: false };\n// //     case 'CREATE_FAIL':\n// //       return { ...state, loadingCreateReview: false };\n// //     default:\n// //       return state;\n// //   }\n// // };\n\n\nexport default function ProductScreen() {\n  _s();\n\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store); // //   const { state, dispatch: ctxDispatch } = useContext(Store);\n  // //   const { cart, userInfo } = state;\n  // //   const [{ loading, error, product, loadingCreateReview }, dispatch] =\n  // //     useReducer(reducer, {\n  // //       loading: true,\n  // //       error: '',\n  // //     });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Screen Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n} // // import Axios from 'axios';\n// // import React, {\n// //   useContext,\n// //   useEffect,\n// //   useReducer,\n// //   useRef,\n// //   useState,\n// // } from 'react';\n// // import Button from 'react-bootstrap/Button';\n// // import Form from 'react-bootstrap/Form';\n// // import FloatingLabel from 'react-bootstrap/FloatingLabel';\n// // import Row from 'react-bootstrap/Row';\n// // import Col from 'react-bootstrap/Col';\n// // import Card from 'react-bootstrap/Card';\n// // import ListGroup from 'react-bootstrap/ListGroup';\n// // import { Link, useNavigate, useParams } from 'react-router-dom';\n// // import { toast } from 'react-toastify';\n// // import LoadingBox from '../components/LoadingBox';\n// // import MessageBox from '../components/MessageBox';\n// // import Rating from '../components/Rating';\n// // import { Store } from '../Store';\n// // import { getError } from '../utils';\n// // import { Helmet } from 'react-helmet-async';\n// // const reducer = (state, action) => {\n// //   switch (action.type) {\n// //     case 'REFRESH_PRODUCT':\n// //       return { ...state, product: action.payload };\n// //     case 'FETCH_REQUEST':\n// //       return { ...state, loading: true };\n// //     case 'FETCH_SUCCESS':\n// //       return { ...state, product: action.payload, loading: false };\n// //     case 'FETCH_FAIL':\n// //       return { ...state, loading: false, error: action.payload };\n// //     case 'CREATE_REQUEST':\n// //       return { ...state, loadingCreateReview: true };\n// //     case 'CREATE_SUCCESS':\n// //       return { ...state, loadingCreateReview: false };\n// //     case 'CREATE_FAIL':\n// //       return { ...state, loadingCreateReview: false };\n// //     default:\n// //       return state;\n// //   }\n// // };\n// // export default function ProductScreen() {\n// //   let reviewsRef = useRef();\n// //   const { state, dispatch: ctxDispatch } = useContext(Store);\n// //   const { cart, userInfo } = state;\n// //   const [{ loading, error, product, loadingCreateReview }, dispatch] =\n// //     useReducer(reducer, {\n// //       loading: true,\n// //       error: '',\n// //     });\n// //   const navigate = useNavigate();\n// //   const params = useParams();\n// //   const { id: slug } = params;\n// //   const [rating, setRating] = useState(0);\n// //   const [comment, setComment] = useState('');\n// //   useEffect(() => {\n// //     const fetchData = async () => {\n// //       dispatch({ type: 'FETCH_REQUEST' });\n// //       try {\n// //         const { data } = await Axios.get(`/api/products/slug/${slug}`);\n// //         dispatch({ type: 'FETCH_SUCCESS', payload: data });\n// //       } catch (error) {\n// //         dispatch({\n// //           type: 'FETCH_FAIL',\n// //           payload: getError(error),\n// //         });\n// //       }\n// //     };\n// //     fetchData();\n// //   }, [dispatch, slug]);\n// //   const addToCartHandler = async () => {\n// //     const existItem = cart.cartItems.find((x) => x._id === product._id);\n// //     const quantity = existItem ? existItem.quantity + 1 : 1;\n// //     const { data } = await Axios.get(`/api/products/${product._id}`);\n// //     if (data.countInStock < quantity) {\n// //       window.alert('Sorry. Product is out of stock');\n// //       return;\n// //     }\n// //     ctxDispatch({ type: 'CART_ADD_ITEM', payload: { ...product, quantity } });\n// //     navigate('/cart');\n// //   };\n// //   const submitHandler = async (e) => {\n// //     e.preventDefault();\n// //     if (!comment || !rating) {\n// //       toast.error('Please enter comment and rating');\n// //       return;\n// //     }\n// //     dispatch({ type: 'CREATE_REQUEST' });\n// //     try {\n// //       const { data } = await Axios.post(\n// //         `/api/products/${product._id}/reviews`,\n// //         { rating, comment, name: userInfo.name },\n// //         {\n// //           headers: { Authorization: `Bearer ${userInfo.token}` },\n// //         }\n// //       );\n// //       dispatch({\n// //         type: 'CREATE_SUCCESS',\n// //       });\n// //       toast.success('Review submitted successfully');\n// //       product.reviews.unshift(data.review);\n// //       product.numReviews = data.numReviews;\n// //       product.rating = data.rating;\n// //       dispatch({ type: 'REFRESH_PRODUCT', payload: product });\n// //       window.scrollTo({\n// //         behavior: 'smooth',\n// //         top: reviewsRef.current.offsetTop,\n// //       });\n// //     } catch (error) {\n// //       toast.error(getError(error));\n// //       dispatch({ type: 'CREATE_FAIL' });\n// //     }\n// //   };\n// //   return loading ? (\n// //     <LoadingBox></LoadingBox>\n// //   ) : error ? (\n// //     <MessageBox variant=\"danger\">{error}</MessageBox>\n// //   ) : (\n// //     <div>\n// //       <Row>\n// //         <Col md={6}>\n// //           <img\n// //             className=\"img-large\"\n// //             src={product.image}\n// //             alt={product.name}\n// //           ></img>\n// //         </Col>\n// //         <Col md={3}>\n// //           <ListGroup variant=\"flush\">\n// //             <ListGroup.Item>\n// //               <Helmet>\n// //                 <title>{product.name}</title>\n// //               </Helmet>\n// //               <h1>{product.name}</h1>\n// //             </ListGroup.Item>\n// //             <ListGroup.Item>\n// //               <Rating\n// //                 rating={product.rating}\n// //                 numReviews={product.numReviews}\n// //               ></Rating>\n// //             </ListGroup.Item>\n// //             <ListGroup.Item>Pirce : ${product.price}</ListGroup.Item>\n// //             <ListGroup.Item>\n// //               Description:\n// //               <p>{product.description}</p>\n// //             </ListGroup.Item>\n// //           </ListGroup>\n// //         </Col>\n// //         <Col md={3}>\n// //           <Card>\n// //             <Card.Body>\n// //               <ListGroup variant=\"flush\">\n// //                 <ListGroup.Item>\n// //                   Seller{' '}\n// //                   <h2>\n// //                     <Link to={`/seller/${product.seller._id}`}>\n// //                       {product.seller.seller.name}\n// //                     </Link>\n// //                   </h2>\n// //                   <Rating\n// //                     rating={product.seller.seller.rating}\n// //                     numReviews={product.seller.seller.numReviews}\n// //                   ></Rating>\n// //                 </ListGroup.Item>\n// //                 <ListGroup.Item>\n// //                   <Row>\n// //                     <Col>Pirce:</Col>\n// //                     <Col>${product.price}</Col>\n// //                   </Row>\n// //                 </ListGroup.Item>\n// //                 <ListGroup.Item>\n// //                   <Row>\n// //                     <Col>Status:</Col>\n// //                     <Col>\n// //                       {product.countInStock > 0 ? (\n// //                         <span className=\"success\">In Stock</span>\n// //                       ) : (\n// //                         <span className=\"danger\">Unavailable</span>\n// //                       )}\n// //                     </Col>\n// //                   </Row>\n// //                 </ListGroup.Item>\n// //                 {product.countInStock > 0 && (\n// //                   <ListGroup.Item>\n// //                     <div className=\"d-grid\">\n// //                       <Button onClick={addToCartHandler} variant=\"primary\">\n// //                         Add to Cart\n// //                       </Button>\n// //                     </div>\n// //                   </ListGroup.Item>\n// //                 )}\n// //               </ListGroup>\n// //             </Card.Body>\n// //           </Card>\n// //         </Col>\n// //       </Row>\n// //       <div className=\"my-3\">\n// //         <h2 ref={reviewsRef}>Reviews</h2>\n// //         <div className=\"mb-3\">\n// //           {product.reviews.length === 0 && (\n// //             <MessageBox>There is no review</MessageBox>\n// //           )}\n// //         </div>\n// //         <ListGroup>\n// //           {product.reviews.map((review) => (\n// //             <ListGroup.Item key={review._id}>\n// //               <strong>{review.name}</strong>\n// //               <Rating rating={review.rating} caption=\" \"></Rating>\n// //               <p>{review.createdAt.substring(0, 10)}</p>\n// //               <p>{review.comment}</p>\n// //             </ListGroup.Item>\n// //           ))}\n// //         </ListGroup>\n// //         <div className=\"my-3\">\n// //           {userInfo ? (\n// //             <form onSubmit={submitHandler}>\n// //               <h2>Write a customer review</h2>\n// //               <Form.Group className=\"mb-3\" controlId=\"rating\">\n// //                 <Form.Label>Rating</Form.Label>\n// //                 <Form.Select\n// //                   aria-label=\"Rating\"\n// //                   value={rating}\n// //                   onChange={(e) => setRating(e.target.value)}\n// //                 >\n// //                   <option value=\"\">Select...</option>\n// //                   <option value=\"1\">1- Poor</option>\n// //                   <option value=\"2\">2- Fair</option>\n// //                   <option value=\"3\">3- Good</option>\n// //                   <option value=\"4\">4- Very good</option>\n// //                   <option value=\"5\">5- Excelent</option>\n// //                 </Form.Select>\n// //               </Form.Group>\n// //               <FloatingLabel\n// //                 controlId=\"floatingTextarea\"\n// //                 label=\"Comments\"\n// //                 className=\"mb-3\"\n// //               >\n// //                 <Form.Control\n// //                   as=\"textarea\"\n// //                   placeholder=\"Leave a comment here\"\n// //                   value={comment}\n// //                   onChange={(e) => setComment(e.target.value)}\n// //                 />\n// //               </FloatingLabel>\n// //               <div className=\"mb-3\">\n// //                 <Button disabled={loadingCreateReview} type=\"submit\">\n// //                   Submit\n// //                 </Button>\n// //                 {loadingCreateReview && <LoadingBox></LoadingBox>}\n// //               </div>\n// //             </form>\n// //           ) : (\n// //             <MessageBox>\n// //               Please <Link to=\"/signin\">Sign In</Link> to write a review\n// //             </MessageBox>\n// //           )}\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n_s(ProductScreen, \"Km7hoU2T3XMJ0JgKDP3546otleQ=\");\n\n_c = ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["/home/carlos/Documents/GitHub/mern-ecommerce/frontend/src/screens/ProductScreen.js"],"names":["React","useContext","Store","reducer","state","action","type","loading","product","payload","error","ProductScreen","dispatch","ctxDispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,UAAtB;;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAoB;AAClC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,eAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAK,eAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYI,QAAAA,OAAO,EAAEH,MAAM,CAACI,OAA5B;AAAqCF,QAAAA,OAAO,EAAE;AAA9C,OAAP;;AACF,SAAK,YAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYG,QAAAA,OAAO,EAAE,KAArB;AAA4BG,QAAAA,KAAK,EAAEL,MAAM,CAACI;AAA1C,OAAP;;AACF;AACE,aAAOL,KAAP;AARJ;AAUD,CAXD,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASO,aAAT,GAAwB;AAAA;;AACrC,QAAM;AAACP,IAAAA,KAAD;AAAQQ,IAAAA,QAAQ,EAAEC;AAAlB,MAAiCZ,UAAU,CAACC,KAAD,CAAjD,CADqC,CAErC;AACF;AACA;AACA;AACA;AACA;AACA;;AAEE,sxSwBS,a;;KAAAA,a","sourcesContent":["import React, {useContext} from 'react';  \nimport { Store } from '../Store';\n\nconst reducer = (state, action ) => {\n  switch(action.type){\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, product: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n}\n\n// // const reducer = (state, action) => {\n// //   switch (action.type) {\n// //     case 'REFRESH_PRODUCT':\n// //       return { ...state, product: action.payload };\n// //     case 'FETCH_REQUEST':\n// //       return { ...state, loading: true };\n// //     case 'FETCH_SUCCESS':\n// //       return { ...state, product: action.payload, loading: false };\n// //     case 'FETCH_FAIL':\n// //       return { ...state, loading: false, error: action.payload };\n// //     case 'CREATE_REQUEST':\n// //       return { ...state, loadingCreateReview: true };\n// //     case 'CREATE_SUCCESS':\n// //       return { ...state, loadingCreateReview: false };\n// //     case 'CREATE_FAIL':\n// //       return { ...state, loadingCreateReview: false };\n// //     default:\n// //       return state;\n// //   }\n// // };\n\nexport default function ProductScreen(){\n  const {state, dispatch: ctxDispatch} = useContext(Store);\n  // //   const { state, dispatch: ctxDispatch } = useContext(Store);\n// //   const { cart, userInfo } = state;\n// //   const [{ loading, error, product, loadingCreateReview }, dispatch] =\n// //     useReducer(reducer, {\n// //       loading: true,\n// //       error: '',\n// //     });\n\n  return (\n    <div>\n        <h1>Screen Product</h1>\n    </div>\n  );\n}\n\n\n// // import Axios from 'axios';\n// // import React, {\n// //   useContext,\n// //   useEffect,\n// //   useReducer,\n// //   useRef,\n// //   useState,\n// // } from 'react';\n// // import Button from 'react-bootstrap/Button';\n// // import Form from 'react-bootstrap/Form';\n// // import FloatingLabel from 'react-bootstrap/FloatingLabel';\n// // import Row from 'react-bootstrap/Row';\n// // import Col from 'react-bootstrap/Col';\n// // import Card from 'react-bootstrap/Card';\n// // import ListGroup from 'react-bootstrap/ListGroup';\n// // import { Link, useNavigate, useParams } from 'react-router-dom';\n// // import { toast } from 'react-toastify';\n// // import LoadingBox from '../components/LoadingBox';\n// // import MessageBox from '../components/MessageBox';\n// // import Rating from '../components/Rating';\n// // import { Store } from '../Store';\n// // import { getError } from '../utils';\n// // import { Helmet } from 'react-helmet-async';\n\n// // const reducer = (state, action) => {\n// //   switch (action.type) {\n// //     case 'REFRESH_PRODUCT':\n// //       return { ...state, product: action.payload };\n// //     case 'FETCH_REQUEST':\n// //       return { ...state, loading: true };\n// //     case 'FETCH_SUCCESS':\n// //       return { ...state, product: action.payload, loading: false };\n// //     case 'FETCH_FAIL':\n// //       return { ...state, loading: false, error: action.payload };\n// //     case 'CREATE_REQUEST':\n// //       return { ...state, loadingCreateReview: true };\n// //     case 'CREATE_SUCCESS':\n// //       return { ...state, loadingCreateReview: false };\n// //     case 'CREATE_FAIL':\n// //       return { ...state, loadingCreateReview: false };\n// //     default:\n// //       return state;\n// //   }\n// // };\n\n// // export default function ProductScreen() {\n// //   let reviewsRef = useRef();\n\n// //   const { state, dispatch: ctxDispatch } = useContext(Store);\n// //   const { cart, userInfo } = state;\n// //   const [{ loading, error, product, loadingCreateReview }, dispatch] =\n// //     useReducer(reducer, {\n// //       loading: true,\n// //       error: '',\n// //     });\n\n// //   const navigate = useNavigate();\n\n// //   const params = useParams();\n// //   const { id: slug } = params;\n\n// //   const [rating, setRating] = useState(0);\n// //   const [comment, setComment] = useState('');\n\n// //   useEffect(() => {\n// //     const fetchData = async () => {\n// //       dispatch({ type: 'FETCH_REQUEST' });\n// //       try {\n// //         const { data } = await Axios.get(`/api/products/slug/${slug}`);\n// //         dispatch({ type: 'FETCH_SUCCESS', payload: data });\n// //       } catch (error) {\n// //         dispatch({\n// //           type: 'FETCH_FAIL',\n// //           payload: getError(error),\n// //         });\n// //       }\n// //     };\n\n// //     fetchData();\n// //   }, [dispatch, slug]);\n\n// //   const addToCartHandler = async () => {\n// //     const existItem = cart.cartItems.find((x) => x._id === product._id);\n// //     const quantity = existItem ? existItem.quantity + 1 : 1;\n// //     const { data } = await Axios.get(`/api/products/${product._id}`);\n// //     if (data.countInStock < quantity) {\n// //       window.alert('Sorry. Product is out of stock');\n// //       return;\n// //     }\n// //     ctxDispatch({ type: 'CART_ADD_ITEM', payload: { ...product, quantity } });\n// //     navigate('/cart');\n// //   };\n// //   const submitHandler = async (e) => {\n// //     e.preventDefault();\n// //     if (!comment || !rating) {\n// //       toast.error('Please enter comment and rating');\n// //       return;\n// //     }\n// //     dispatch({ type: 'CREATE_REQUEST' });\n// //     try {\n// //       const { data } = await Axios.post(\n// //         `/api/products/${product._id}/reviews`,\n// //         { rating, comment, name: userInfo.name },\n// //         {\n// //           headers: { Authorization: `Bearer ${userInfo.token}` },\n// //         }\n// //       );\n// //       dispatch({\n// //         type: 'CREATE_SUCCESS',\n// //       });\n// //       toast.success('Review submitted successfully');\n// //       product.reviews.unshift(data.review);\n// //       product.numReviews = data.numReviews;\n// //       product.rating = data.rating;\n// //       dispatch({ type: 'REFRESH_PRODUCT', payload: product });\n// //       window.scrollTo({\n// //         behavior: 'smooth',\n// //         top: reviewsRef.current.offsetTop,\n// //       });\n// //     } catch (error) {\n// //       toast.error(getError(error));\n// //       dispatch({ type: 'CREATE_FAIL' });\n// //     }\n// //   };\n  \n// //   return loading ? (\n// //     <LoadingBox></LoadingBox>\n// //   ) : error ? (\n// //     <MessageBox variant=\"danger\">{error}</MessageBox>\n// //   ) : (\n// //     <div>\n// //       <Row>\n// //         <Col md={6}>\n// //           <img\n// //             className=\"img-large\"\n// //             src={product.image}\n// //             alt={product.name}\n// //           ></img>\n// //         </Col>\n// //         <Col md={3}>\n// //           <ListGroup variant=\"flush\">\n// //             <ListGroup.Item>\n// //               <Helmet>\n// //                 <title>{product.name}</title>\n// //               </Helmet>\n// //               <h1>{product.name}</h1>\n// //             </ListGroup.Item>\n// //             <ListGroup.Item>\n// //               <Rating\n// //                 rating={product.rating}\n// //                 numReviews={product.numReviews}\n// //               ></Rating>\n// //             </ListGroup.Item>\n// //             <ListGroup.Item>Pirce : ${product.price}</ListGroup.Item>\n// //             <ListGroup.Item>\n// //               Description:\n// //               <p>{product.description}</p>\n// //             </ListGroup.Item>\n// //           </ListGroup>\n// //         </Col>\n// //         <Col md={3}>\n// //           <Card>\n// //             <Card.Body>\n// //               <ListGroup variant=\"flush\">\n// //                 <ListGroup.Item>\n// //                   Seller{' '}\n// //                   <h2>\n// //                     <Link to={`/seller/${product.seller._id}`}>\n// //                       {product.seller.seller.name}\n// //                     </Link>\n// //                   </h2>\n// //                   <Rating\n// //                     rating={product.seller.seller.rating}\n// //                     numReviews={product.seller.seller.numReviews}\n// //                   ></Rating>\n// //                 </ListGroup.Item>\n// //                 <ListGroup.Item>\n// //                   <Row>\n// //                     <Col>Pirce:</Col>\n// //                     <Col>${product.price}</Col>\n// //                   </Row>\n// //                 </ListGroup.Item>\n// //                 <ListGroup.Item>\n// //                   <Row>\n// //                     <Col>Status:</Col>\n// //                     <Col>\n// //                       {product.countInStock > 0 ? (\n// //                         <span className=\"success\">In Stock</span>\n// //                       ) : (\n// //                         <span className=\"danger\">Unavailable</span>\n// //                       )}\n// //                     </Col>\n// //                   </Row>\n// //                 </ListGroup.Item>\n\n// //                 {product.countInStock > 0 && (\n// //                   <ListGroup.Item>\n// //                     <div className=\"d-grid\">\n// //                       <Button onClick={addToCartHandler} variant=\"primary\">\n// //                         Add to Cart\n// //                       </Button>\n// //                     </div>\n// //                   </ListGroup.Item>\n// //                 )}\n// //               </ListGroup>\n// //             </Card.Body>\n// //           </Card>\n// //         </Col>\n// //       </Row>\n// //       <div className=\"my-3\">\n// //         <h2 ref={reviewsRef}>Reviews</h2>\n\n// //         <div className=\"mb-3\">\n// //           {product.reviews.length === 0 && (\n// //             <MessageBox>There is no review</MessageBox>\n// //           )}\n// //         </div>\n// //         <ListGroup>\n// //           {product.reviews.map((review) => (\n// //             <ListGroup.Item key={review._id}>\n// //               <strong>{review.name}</strong>\n// //               <Rating rating={review.rating} caption=\" \"></Rating>\n// //               <p>{review.createdAt.substring(0, 10)}</p>\n// //               <p>{review.comment}</p>\n// //             </ListGroup.Item>\n// //           ))}\n// //         </ListGroup>\n// //         <div className=\"my-3\">\n// //           {userInfo ? (\n// //             <form onSubmit={submitHandler}>\n// //               <h2>Write a customer review</h2>\n\n// //               <Form.Group className=\"mb-3\" controlId=\"rating\">\n// //                 <Form.Label>Rating</Form.Label>\n// //                 <Form.Select\n// //                   aria-label=\"Rating\"\n// //                   value={rating}\n// //                   onChange={(e) => setRating(e.target.value)}\n// //                 >\n// //                   <option value=\"\">Select...</option>\n// //                   <option value=\"1\">1- Poor</option>\n// //                   <option value=\"2\">2- Fair</option>\n// //                   <option value=\"3\">3- Good</option>\n// //                   <option value=\"4\">4- Very good</option>\n// //                   <option value=\"5\">5- Excelent</option>\n// //                 </Form.Select>\n// //               </Form.Group>\n\n// //               <FloatingLabel\n// //                 controlId=\"floatingTextarea\"\n// //                 label=\"Comments\"\n// //                 className=\"mb-3\"\n// //               >\n// //                 <Form.Control\n// //                   as=\"textarea\"\n// //                   placeholder=\"Leave a comment here\"\n// //                   value={comment}\n// //                   onChange={(e) => setComment(e.target.value)}\n// //                 />\n// //               </FloatingLabel>\n\n// //               <div className=\"mb-3\">\n// //                 <Button disabled={loadingCreateReview} type=\"submit\">\n// //                   Submit\n// //                 </Button>\n\n// //                 {loadingCreateReview && <LoadingBox></LoadingBox>}\n// //               </div>\n// //             </form>\n// //           ) : (\n// //             <MessageBox>\n// //               Please <Link to=\"/signin\">Sign In</Link> to write a review\n// //             </MessageBox>\n// //           )}\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n"]},"metadata":{},"sourceType":"module"}