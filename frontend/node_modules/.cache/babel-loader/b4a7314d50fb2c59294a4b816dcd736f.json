{"ast":null,"code":"var _jsxFileName = \"/home/carlos/Documents/GitHub/mern-app/frontend/src/screens/SigninScreen.js\",\n    _s = $RefreshSig$();\n\nimport Axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SigninScreen() {\n  _s();\n\n  // navigate - is commig from useNavigate hook \n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState(''); // useLocation - is a hook from react-router-dom\n  // search - is a object inside useLocation\n\n  const {\n    search\n  } = useLocation(); // from the search get there redirectInUrl \n  // by instancing URLSearchParams and passing the search object\n  // and get the redirect from the query string\n\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\n  const redirect = redirectInUrl ? redirectInUrl : '/'; // get state and ctxDispatch from useContext\n\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store); // get user info from state\n\n  const {\n    userInfo\n  } = state;\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      // send an ajax request to backend for /api/users/signin\n      // pass email and password for /api/users/signin as a post request\n      // get the response and extract data from the response\n      const {\n        data\n      } = await Axios.post('/api/users/signin', {\n        email,\n        password\n      }); // dispatch an action and pass an object\n\n      ctxDispatch({\n        type: 'USER_SIGNIN',\n        // action type\n        payload: data\n      }); // data from backend\n      // save user information in a browser storage\n\n      localStorage.setItem('userInfo', // data converted to string\n      JSON.stringify(data)); //convert to string, data that we get from backend\n\n      navigate(redirect || '/');\n    } catch (err) {\n      toast.error(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    // check user info\n    if (userInfo) {\n      // if already exist\n      navigate(redirect); // redirect user to the redirect variable\n    }\n  }, // dependecy array with all variables\n  [navigate, redirect, userInfo]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-3\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [\"New customer?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: `/signup?redirect=${redirect}`,\n          children: \"Create your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SigninScreen, \"6/VaddSL7S0dCD+1zePAqfmqsIw=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = SigninScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SigninScreen\");","map":{"version":3,"sources":["/home/carlos/Documents/GitHub/mern-app/frontend/src/screens/SigninScreen.js"],"names":["Axios","React","useContext","useEffect","useState","Helmet","Button","Container","Form","Link","useNavigate","useLocation","toast","Store","getError","SigninScreen","navigate","email","setEmail","password","setPassword","search","redirectInUrl","URLSearchParams","get","redirect","state","dispatch","ctxDispatch","userInfo","submitHandler","e","preventDefault","data","post","type","payload","localStorage","setItem","JSON","stringify","err","error","target","value"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\n\nexport default function SigninScreen() {\n\n  // navigate - is commig from useNavigate hook \n  const navigate = useNavigate();\n  \n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // useLocation - is a hook from react-router-dom\n  // search - is a object inside useLocation\n  const { search } = useLocation();\n\n    // from the search get there redirectInUrl \n  // by instancing URLSearchParams and passing the search object\n  // and get the redirect from the query string\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\n  const redirect = redirectInUrl ? redirectInUrl : '/';\n\n  // get state and ctxDispatch from useContext\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n\n  // get user info from state\n  const { userInfo } = state;\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      // send an ajax request to backend for /api/users/signin\n      // pass email and password for /api/users/signin as a post request\n      // get the response and extract data from the response\n      const { data } = await Axios.post('/api/users/signin', {\n        email,\n        password,\n      });\n\n      // dispatch an action and pass an object\n      ctxDispatch({ type: 'USER_SIGNIN', // action type\n                    payload: data });    // data from backend\n\n       // save user information in a browser storage\n      localStorage.setItem( 'userInfo', // data converted to string\n                            JSON.stringify(data) );  //convert to string, data that we get from backend\n      navigate(redirect || '/');\n    } catch (err) {\n      toast.error(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    // check user info\n    if (userInfo) { // if already exist\n      navigate(redirect); // redirect user to the redirect variable\n    }\n  }, // dependecy array with all variables\n   [navigate, redirect, userInfo]);\n\n\n  return (\n    <Container className=\"small-container\">\n      <Helmet>\n        <title>Sign In</title>\n      </Helmet>\n      <h1 className=\"my-3\">Sign In</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </Form.Group>\n\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Sign In</Button>\n        </div>\n        <div className=\"mb-3\">\n          New customer?{' '}\n          <Link to={`/signup?redirect=${redirect}`}>Create your account</Link>\n        </div>\n      </Form>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}