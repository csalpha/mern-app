{"ast":null,"code":"// import jwt from 'jsonwebtoken';\n// export generateToken function\nexport const generateToken = user => {\n  // jwt object from json web token and call sign function\n  return jwt.sign({\n    // pass user information\n    _id: user._id,\n    name: user.name,\n    email: user.email,\n    isAdmin: user.isAdmin,\n    isSeller: user.isSeller\n  }, // pass secret string to encrypt data\n  'somethingsecret', // pass expires date ( 30 days )\n  {\n    expiresIn: '30d'\n  });\n};\nexport const getError = error => {};","map":{"version":3,"sources":["/home/carlos/Documents/GitHub/mern-app/frontend/src/utils.js"],"names":["generateToken","user","jwt","sign","_id","name","email","isAdmin","isSeller","expiresIn","getError","error"],"mappings":"AAAA;AAEA;AACA,OAAO,MAAMA,aAAa,GAAGC,IAAD,IAAU;AAClC;AACA,SAAOC,GAAG,CAACC,IAAJ,CAAU;AAAG;AACAC,IAAAA,GAAG,EAAEH,IAAI,CAACG,GADb;AAEGC,IAAAA,IAAI,EAAEJ,IAAI,CAACI,IAFd;AAGGC,IAAAA,KAAK,EAAEL,IAAI,CAACK,KAHf;AAIGC,IAAAA,OAAO,EAAEN,IAAI,CAACM,OAJjB;AAKGC,IAAAA,QAAQ,EAAEP,IAAI,CAACO;AALlB,GAAV,EAOa;AACA,mBARb,EASa;AACA;AACIC,IAAAA,SAAS,EAAE;AADf,GAVb,CAAP;AAeH,CAjBM;AAmBP,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW,CAElC,CAFM","sourcesContent":["// import jwt from 'jsonwebtoken';\n\n// export generateToken function\nexport const generateToken =(user) => {\n    // jwt object from json web token and call sign function\n    return jwt.sign( {  // pass user information\n                        _id: user._id, \n                        name: user.name,\n                        email: user.email,\n                        isAdmin: user.isAdmin,\n                        isSeller: user.isSeller  \n                     }, \n                        // pass secret string to encrypt data\n                        'somethingsecret', \n                        // pass expires date ( 30 days )\n                        { \n                            expiresIn: '30d'\n                        } \n                    ); \n                                                    \n};\n\nexport const getError = (error) => {\n \n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}