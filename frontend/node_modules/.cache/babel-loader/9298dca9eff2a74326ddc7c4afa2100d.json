{"ast":null,"code":"var _jsxFileName = \"/home/carlos/Documents/GitHub/mern-app/frontend/src/screens/HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport { Carousel } from 'react-responsive-carousel';\nimport Product from '../components/Product';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport { getError } from '../utils'; // define reducer function\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        products: action.payload.products,\n        sellers: action.payload.sellers,\n        loading: false\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function HomeScreen() {\n  _s();\n\n  const [{\n    loading,\n    error,\n    products,\n    sellers\n  }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({\n        type: 'FETCH_REQUEST'\n      });\n\n      try {\n        const {\n          data: products\n        } = await Axios.get('/api/products/top-products');\n        const {\n          data: sellers\n        } = await Axios.get('/api/users/top-sellers');\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: {\n            products,\n            sellers\n          }\n        });\n      } catch (error) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(error)\n        });\n      }\n    };\n\n    fetchData();\n  }, [dispatch]);\n  console.log(products);\n  console.log(sellers);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Featured Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomeScreen, \"o9I8EUEjiUZ9Mt5zs8wiQVHOXCs=\");\n\n_c = HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["/home/carlos/Documents/GitHub/mern-app/frontend/src/screens/HomeScreen.js"],"names":["React","useEffect","useReducer","Row","Col","Carousel","Product","LoadingBox","MessageBox","Link","Axios","getError","reducer","state","action","type","loading","products","payload","sellers","error","HomeScreen","dispatch","fetchData","data","get","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAO,uDAAP;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,UAAzB,C,CAEA;;;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAChB;AACE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAK,eAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA,QAAQ,EAAEH,MAAM,CAACI,OAAP,CAAeD,QAFpB;AAGLE,QAAAA,OAAO,EAAEL,MAAM,CAACI,OAAP,CAAeC,OAHnB;AAILH,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAK,YAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYG,QAAAA,OAAO,EAAE,KAArB;AAA4BI,QAAAA,KAAK,EAAEN,MAAM,CAACI;AAA1C,OAAP;;AAEF;AACE,aAAOL,KAAP;AAdJ;AAgBD,CAlBD;;AAoBA,eAAe,SAASQ,UAAT,GAAsB;AAAA;;AACnC,QAAM,CAAC;AAAEL,IAAAA,OAAF;AAAWI,IAAAA,KAAX;AAAkBH,IAAAA,QAAlB;AAA4BE,IAAAA;AAA5B,GAAD,EAAwCG,QAAxC,IAAoDpB,UAAU,CAClEU,OADkE,EAElE;AACEI,IAAAA,OAAO,EAAE,IADX;AAEEI,IAAAA,KAAK,EAAE;AAFT,GAFkE,CAApE;AAQAnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,SAAS,GAAG,YAAY;AAC5BD,MAAAA,QAAQ,CAAC;AAAEP,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;;AACA,UAAI;AACF,cAAM;AAAES,UAAAA,IAAI,EAAEP;AAAR,YAAqB,MAAMP,KAAK,CAACe,GAAN,CAC/B,4BAD+B,CAAjC;AAGA,cAAM;AAAED,UAAAA,IAAI,EAAEL;AAAR,YAAoB,MAAMT,KAAK,CAACe,GAAN,CAAU,wBAAV,CAAhC;AACAH,QAAAA,QAAQ,CAAC;AAAEP,UAAAA,IAAI,EAAE,eAAR;AAAyBG,UAAAA,OAAO,EAAE;AAAED,YAAAA,QAAF;AAAYE,YAAAA;AAAZ;AAAlC,SAAD,CAAR;AACD,OAND,CAME,OAAOC,KAAP,EAAc;AACdE,QAAAA,QAAQ,CAAC;AACPP,UAAAA,IAAI,EAAE,YADC;AAEPG,UAAAA,OAAO,EAAEP,QAAQ,CAACS,KAAD;AAFV,SAAD,CAAR;AAID;AACF,KAdD;;AAgBAG,IAAAA,SAAS;AACV,GAlBQ,EAkBN,CAACD,QAAD,CAlBM,CAAT;AAoBAI,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AAEA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GAlEuBE,U;;KAAAA,U","sourcesContent":["import React, { useEffect, useReducer } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport { Carousel } from 'react-responsive-carousel';\nimport Product from '../components/Product';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport { getError } from '../utils';\n\n// define reducer function\nconst reducer = (state, action) => \n{\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        products: action.payload.products,\n        sellers: action.payload.sellers,\n        loading: false,\n      };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default function HomeScreen() {\n  const [{ loading, error, products, sellers }, dispatch] = useReducer(\n    reducer,\n    {\n      loading: true,\n      error: '',\n    }\n  );\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_REQUEST' });\n      try {\n        const { data: products } = await Axios.get(\n          '/api/products/top-products'\n        );\n        const { data: sellers } = await Axios.get('/api/users/top-sellers');\n        dispatch({ type: 'FETCH_SUCCESS', payload: { products, sellers } });\n      } catch (error) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(error),\n        });\n      }\n    };\n\n    fetchData();\n  }, [dispatch]);\n\n  console.log(products);\n  console.log(sellers);\n\n  return (\n    <div>\n      <h2>Featured Products</h2>\n      {/* {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <>\n          {sellers.length === 0 && <MessageBox>No Seller Found</MessageBox>}\n          <Carousel showArrows autoPlay showThumbs={false}>\n            {sellers.map((seller) => (\n              <div key={seller._id}>\n                <Link to={`/seller/${seller._id}`}>\n                  <img src={seller.seller.logo} alt={seller.seller.name} />\n                  <p className=\"legend\">{seller.seller.name}</p>\n                </Link>\n              </div>\n            ))}\n          </Carousel>\n          <h2>Featured Products</h2>\n          {products.length === 0 && <MessageBox>No Product Found</MessageBox>}\n          <Row>\n            {products.map((product) => (\n              <Col sm={6} md={4} lg={3} key={product._id} className=\"mb-3\">\n                <Product product={product}></Product>\n              </Col>\n            ))}\n          </Row>\n\n        </>\n      )} */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}