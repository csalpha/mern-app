{"ast":null,"code":"var _jsxFileName = \"/home/carlos/Documents/GitHub/mern-ecommerce/frontend/src/Store.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from 'react'; // import logger from 'use-reducer-logger';\n// i wanna use react context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Store = /*#__PURE__*/createContext();\nconst initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {\n      location: {}\n    },\n    paymentMethod: localStorage.getItem('paymentMethod') ? localStorage.getItem('paymentMethod') : ''\n  },\n  userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CART_ADD_ITEM':\n      {\n        const newItem = action.payload;\n        const existItem = state.cart.cartItems.find(item => item._id === newItem._id);\n        const cartItems = existItem ? state.cart.cartItems.map(item => item.name === existItem.name ? newItem : item) : [...state.cart.cartItems, newItem];\n        localStorage.setItem('cartItems', JSON.stringify(cartItems));\n        return { ...state,\n          cart: { ...state.cart,\n            cartItems\n          }\n        };\n      }\n\n    case 'CART_REMOVE_ITEM':\n      {\n        const cartItems = state.cart.cartItems.filter(item => item._id !== action.payload._id);\n        localStorage.setItem('cartItems', JSON.stringify(cartItems));\n        return { ...state,\n          cart: { ...state.cart,\n            cartItems\n          }\n        };\n      }\n\n    case 'SAVE_SHIPPING_ADDRESS':\n      return { ...state,\n        cart: { ...state.cart,\n          shippingAddress: { ...state.cart.shippingAddress,\n            ...action.payload\n          }\n        }\n      };\n\n    case 'SAVE_SHIPPING_ADDRESS_MAP_LOCATION':\n      return { ...state,\n        cart: { ...state.cart,\n          shippingAddress: { ...state.cart.shippingAddress,\n            location: action.payload\n          }\n        }\n      };\n\n    case 'SAVE_PAYMENT_METHOD':\n      return { ...state,\n        cart: { ...state.cart,\n          paymentMethod: action.payload\n        }\n      };\n\n    case 'CART_CLEAR':\n      return { ...state,\n        cart: { ...state.cart,\n          cartItems: []\n        }\n      };\n\n    case 'USER_SIGNIN':\n      return { ...state,\n        userInfo: action.payload\n      };\n\n    case 'USER_SIGNOUT':\n      return { ...state,\n        userInfo: null,\n        cart: {\n          cartItems: [],\n          shippingAddress: {\n            location: {}\n          },\n          paymentMethod: ''\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  _s();\n\n  const [state, dispatch] = useReducer( //process.env.NODE_ENV === 'development' ? logger(reducer) : reducer,\n  reducer, initialState);\n  const value = {\n    state,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(Store.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 10\n  }, this);\n}\n\n_s(StoreProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = StoreProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"sources":["/home/carlos/Documents/GitHub/mern-ecommerce/frontend/src/Store.js"],"names":["createContext","useReducer","Store","initialState","cart","cartItems","localStorage","getItem","JSON","parse","shippingAddress","location","paymentMethod","userInfo","reducer","state","action","type","newItem","payload","existItem","find","item","_id","map","name","setItem","stringify","filter","StoreProvider","props","dispatch","value","children"],"mappings":"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","sourcesContent":["import { createContext, useReducer } from 'react';\n// import logger from 'use-reducer-logger';\n\n// i wanna use react context\n\nexport const Store = createContext();\n\nconst initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems')\n      ? JSON.parse(localStorage.getItem('cartItems'))\n      : [],\n    shippingAddress: localStorage.getItem('shippingAddress')\n      ? JSON.parse(localStorage.getItem('shippingAddress'))\n      : { location: {} },\n    paymentMethod: localStorage.getItem('paymentMethod')\n      ? localStorage.getItem('paymentMethod')\n      : '',\n  },\n  userInfo: localStorage.getItem('userInfo')\n    ? JSON.parse(localStorage.getItem('userInfo'))\n    : null,\n};\n\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CART_ADD_ITEM': {\n      const newItem = action.payload;\n      const existItem = state.cart.cartItems.find(\n        (item) => item._id === newItem._id\n      );\n      const cartItems = existItem\n        ? state.cart.cartItems.map((item) =>\n            item.name === existItem.name ? newItem : item\n          )\n        : [...state.cart.cartItems, newItem];\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n      return { ...state, cart: { ...state.cart, cartItems } };\n    }\n    case 'CART_REMOVE_ITEM': {\n      const cartItems = state.cart.cartItems.filter(\n        (item) => item._id !== action.payload._id\n      );\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n      return { ...state, cart: { ...state.cart, cartItems } };\n    }\n    case 'SAVE_SHIPPING_ADDRESS':\n      return {\n        ...state,\n        cart: {\n          ...state.cart,\n          shippingAddress: {\n            ...state.cart.shippingAddress,\n            ...action.payload,\n          },\n        },\n      };\n    case 'SAVE_SHIPPING_ADDRESS_MAP_LOCATION':\n      return {\n        ...state,\n        cart: {\n          ...state.cart,\n          shippingAddress: {\n            ...state.cart.shippingAddress,\n            location: action.payload,\n          },\n        },\n      };\n    case 'SAVE_PAYMENT_METHOD':\n      return {\n        ...state,\n        cart: { ...state.cart, paymentMethod: action.payload },\n      };\n    case 'CART_CLEAR':\n      return { ...state, cart: { ...state.cart, cartItems: [] } };\n    case 'USER_SIGNIN':\n      return { ...state, userInfo: action.payload };\n    case 'USER_SIGNOUT':\n      return {\n        ...state,\n        userInfo: null,\n        cart: {\n          cartItems: [],\n          shippingAddress: { location: {} },\n          paymentMethod: '',\n        },\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = useReducer(\n    //process.env.NODE_ENV === 'development' ? logger(reducer) : reducer,\n    reducer,\n    initialState\n  );\n\n  const value = { state, dispatch };\n\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n}\n"]},"metadata":{},"sourceType":"module"}