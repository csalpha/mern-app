{"ast":null,"code":"var _jsxFileName = \"/home/carlos/Documents/GitHub/mern-ecommerce/frontend/src/Store.js\";\nimport { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Store = /*#__PURE__*/createContext();\nexport function StoreProvider(props) {\n  const value = '';\n  return /*#__PURE__*/_jsxDEV(Store.Provider, {\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n} // // import { createContext, useReducer } from 'react';\n// // // import logger from 'use-reducer-logger';\n// // export const Store = createContext();\n// // const initialState = {\n// //   cart: {\n// //     cartItems: localStorage.getItem('cartItems')\n// //       ? JSON.parse(localStorage.getItem('cartItems'))\n// //       : [],\n// //     shippingAddress: localStorage.getItem('shippingAddress')\n// //       ? JSON.parse(localStorage.getItem('shippingAddress'))\n// //       : { location: {} },\n// //     paymentMethod: localStorage.getItem('paymentMethod')\n// //       ? localStorage.getItem('paymentMethod')\n// //       : '',\n// //   },\n// //   userInfo: localStorage.getItem('userInfo')\n// //     ? JSON.parse(localStorage.getItem('userInfo'))\n// //     : null,\n// // };\n// // function reducer(state, action) {\n// //   switch (action.type) {\n// //     case 'CART_ADD_ITEM': {\n// //       const newItem = action.payload;\n// //       const existItem = state.cart.cartItems.find(\n// //         (item) => item._id === newItem._id\n// //       );\n// //       const cartItems = existItem\n// //         ? state.cart.cartItems.map((item) =>\n// //             item.name === existItem.name ? newItem : item\n// //           )\n// //         : [...state.cart.cartItems, newItem];\n// //       localStorage.setItem('cartItems', JSON.stringify(cartItems));\n// //       return { ...state, cart: { ...state.cart, cartItems } };\n// //     }\n// //     case 'CART_REMOVE_ITEM': {\n// //       const cartItems = state.cart.cartItems.filter(\n// //         (item) => item._id !== action.payload._id\n// //       );\n// //       localStorage.setItem('cartItems', JSON.stringify(cartItems));\n// //       return { ...state, cart: { ...state.cart, cartItems } };\n// //     }\n// //     case 'SAVE_SHIPPING_ADDRESS':\n// //       return {\n// //         ...state,\n// //         cart: {\n// //           ...state.cart,\n// //           shippingAddress: {\n// //             ...state.cart.shippingAddress,\n// //             ...action.payload,\n// //           },\n// //         },\n// //       };\n// //     case 'SAVE_SHIPPING_ADDRESS_MAP_LOCATION':\n// //       return {\n// //         ...state,\n// //         cart: {\n// //           ...state.cart,\n// //           shippingAddress: {\n// //             ...state.cart.shippingAddress,\n// //             location: action.payload,\n// //           },\n// //         },\n// //       };\n// //     case 'SAVE_PAYMENT_METHOD':\n// //       return {\n// //         ...state,\n// //         cart: { ...state.cart, paymentMethod: action.payload },\n// //       };\n// //     case 'CART_CLEAR':\n// //       return { ...state, cart: { ...state.cart, cartItems: [] } };\n// //     case 'USER_SIGNIN':\n// //       return { ...state, userInfo: action.payload };\n// //     case 'USER_SIGNOUT':\n// //       return {\n// //         ...state,\n// //         userInfo: null,\n// //         cart: {\n// //           cartItems: [],\n// //           shippingAddress: { location: {} },\n// //           paymentMethod: '',\n// //         },\n// //       };\n// //     default:\n// //       return state;\n// //   }\n// // }\n// // export function StoreProvider(props) {\n// //   const [state, dispatch] = useReducer(\n// //     //process.env.NODE_ENV === 'development' ? logger(reducer) : reducer,\n// //     reducer,\n// //     initialState\n// //   );\n// //   const value = { state, dispatch };\n// //   return <Store.Provider value={value}>{props.children}</Store.Provider>;\n// // }\n\n_c = StoreProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"sources":["/home/carlos/Documents/GitHub/mern-ecommerce/frontend/src/Store.js"],"names":["createContext","Store","StoreProvider","props","value","children"],"mappings":";AAAA,SAASA,aAAT,QAA8B,OAA9B;;AAEA,OAAO,MAAMC,KAAK,gBAAGD,aAAa,EAA3B;AAEP,OAAO,SAASE,aAAT,CAAuBC,KAAvB,EAA8B;AAGjC,QAAMC,KAAK,GAAG,EAAd;AAEA,sBAAO,QAAC,KAAD,CAAO,QAAP;AAAA,cAAiBD,KAAK,CAACE;AAAvhHgBH,a","sourcesContent":["import { createContext } from \"react\";\n\nexport const Store = createContext();\n\nexport function StoreProvider(props) {\n    \n  \n    const value = '';\n  \n    return <Store.Provider>{props.children}</Store.Provider>;\n  }\n  \n\n\n// // import { createContext, useReducer } from 'react';\n// // // import logger from 'use-reducer-logger';\n\n// // export const Store = createContext();\n\n// // const initialState = {\n// //   cart: {\n// //     cartItems: localStorage.getItem('cartItems')\n// //       ? JSON.parse(localStorage.getItem('cartItems'))\n// //       : [],\n// //     shippingAddress: localStorage.getItem('shippingAddress')\n// //       ? JSON.parse(localStorage.getItem('shippingAddress'))\n// //       : { location: {} },\n// //     paymentMethod: localStorage.getItem('paymentMethod')\n// //       ? localStorage.getItem('paymentMethod')\n// //       : '',\n// //   },\n// //   userInfo: localStorage.getItem('userInfo')\n// //     ? JSON.parse(localStorage.getItem('userInfo'))\n// //     : null,\n// // };\n\n\n// // function reducer(state, action) {\n// //   switch (action.type) {\n// //     case 'CART_ADD_ITEM': {\n// //       const newItem = action.payload;\n// //       const existItem = state.cart.cartItems.find(\n// //         (item) => item._id === newItem._id\n// //       );\n// //       const cartItems = existItem\n// //         ? state.cart.cartItems.map((item) =>\n// //             item.name === existItem.name ? newItem : item\n// //           )\n// //         : [...state.cart.cartItems, newItem];\n// //       localStorage.setItem('cartItems', JSON.stringify(cartItems));\n// //       return { ...state, cart: { ...state.cart, cartItems } };\n// //     }\n// //     case 'CART_REMOVE_ITEM': {\n// //       const cartItems = state.cart.cartItems.filter(\n// //         (item) => item._id !== action.payload._id\n// //       );\n// //       localStorage.setItem('cartItems', JSON.stringify(cartItems));\n// //       return { ...state, cart: { ...state.cart, cartItems } };\n// //     }\n// //     case 'SAVE_SHIPPING_ADDRESS':\n// //       return {\n// //         ...state,\n// //         cart: {\n// //           ...state.cart,\n// //           shippingAddress: {\n// //             ...state.cart.shippingAddress,\n// //             ...action.payload,\n// //           },\n// //         },\n// //       };\n// //     case 'SAVE_SHIPPING_ADDRESS_MAP_LOCATION':\n// //       return {\n// //         ...state,\n// //         cart: {\n// //           ...state.cart,\n// //           shippingAddress: {\n// //             ...state.cart.shippingAddress,\n// //             location: action.payload,\n// //           },\n// //         },\n// //       };\n// //     case 'SAVE_PAYMENT_METHOD':\n// //       return {\n// //         ...state,\n// //         cart: { ...state.cart, paymentMethod: action.payload },\n// //       };\n// //     case 'CART_CLEAR':\n// //       return { ...state, cart: { ...state.cart, cartItems: [] } };\n// //     case 'USER_SIGNIN':\n// //       return { ...state, userInfo: action.payload };\n// //     case 'USER_SIGNOUT':\n// //       return {\n// //         ...state,\n// //         userInfo: null,\n// //         cart: {\n// //           cartItems: [],\n// //           shippingAddress: { location: {} },\n// //           paymentMethod: '',\n// //         },\n// //       };\n\n// //     default:\n// //       return state;\n// //   }\n// // }\n\n// // export function StoreProvider(props) {\n// //   const [state, dispatch] = useReducer(\n// //     //process.env.NODE_ENV === 'development' ? logger(reducer) : reducer,\n// //     reducer,\n// //     initialState\n// //   );\n\n// //   const value = { state, dispatch };\n\n// //   return <Store.Provider value={value}>{props.children}</Store.Provider>;\n// // }\n"]},"metadata":{},"sourceType":"module"}