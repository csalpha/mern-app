{"ast":null,"code":"var _jsxFileName = \"/home/carlos/Documents/GitHub/mern-app/frontend/src/screens/ShippingAddressScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate } from 'react-router-dom';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { Store } from '../Store';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'; // React  Componet\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShippingAddressScreen() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    addressMap,\n    userInfo,\n    cart: {\n      shippingAddress\n    }\n  } = state;\n  const [lat, setLat] = useState(shippingAddress.lat);\n  const [lng, setLng] = useState(shippingAddress.lng);\n\n  if (!userInfo) {\n    navigate('/signin');\n  }\n\n  const [fullName, setFullName] = useState(shippingAddress.fullName || '');\n  const [address, setAddress] = useState(shippingAddress.address || '');\n  const [city, setCity] = useState(shippingAddress.city || '');\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode || '');\n  const [country, setCountry] = useState(shippingAddress.country || '');\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const newLat = addressMap ? addressMap.lat : lat;\n    const newLng = addressMap ? addressMap.lng : lng;\n\n    if (addressMap) {\n      setLat(addressMap.lat);\n      setLng(addressMap.lng);\n    }\n\n    let moveOn = true; // if (!newLat || !newLng) {\n    //   moveOn = window.confirm(\n    //     \"You did not set your location on map. Continue?\"\n    //   );\n    // }\n\n    if (moveOn) {\n      ctxDispatch({\n        type: 'SAVE_SHIPPING_ADDRESS',\n        payload: {\n          fullName,\n          address,\n          city,\n          postalCode,\n          country,\n          lat: newLat,\n          lng: newLng\n        }\n      });\n      localStorage.setItem('shippingAddress', JSON.stringify({\n        fullName,\n        address,\n        city,\n        postalCode,\n        country,\n        lat: newLat,\n        lng: newLng\n      }));\n      navigate('/payment');\n    }\n  };\n\n  const chooseOnMap = () => {\n    // ctxDispatch(\n    //   saveShippingAddress({\n    //     fullName,\n    //     address,\n    //     city,\n    //     postalCode,\n    //     country,\n    //     lat,\n    //     lng,\n    //   })\n    // );\n    navigate('/map');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container small-container\",\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Shipping Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-3\",\n        children: \"Shipping Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"fullName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: fullName,\n            onChange: e => setFullName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"address\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: address,\n            onChange: e => setAddress(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"city\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: city,\n            onChange: e => setCity(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"postalCode\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Postal Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: postalCode,\n            onChange: e => setPostalCode(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"country\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: country,\n            onChange: e => setCountry(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: \"chooseOnMap\",\n            type: \"button\",\n            variant: \"light\",\n            onClick: chooseOnMap,\n            children: \"Choose Location On Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShippingAddressScreen, \"Vq3JxZmB93ROi92lYjVgex13D58=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ShippingAddressScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingAddressScreen\");","map":{"version":3,"sources":["/home/carlos/Documents/GitHub/mern-app/frontend/src/screens/ShippingAddressScreen.jsx"],"names":["React","useContext","useState","Helmet","useNavigate","CheckoutSteps","Store","Form","Button","ShippingAddressScreen","navigate","state","dispatch","ctxDispatch","addressMap","userInfo","cart","shippingAddress","lat","setLat","lng","setLng","fullName","setFullName","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","submitHandler","e","preventDefault","newLat","newLng","moveOn","type","payload","localStorage","setItem","JSON","stringify","chooseOnMap","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate } from 'react-router-dom';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { Store } from '../Store';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\n// React  Componet\nexport default function ShippingAddressScreen() {\n  const navigate = useNavigate();\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const {\n    addressMap,\n    userInfo,\n    cart: { shippingAddress },\n  } = state;\n\n  const [lat, setLat] = useState(shippingAddress.lat);\n  const [lng, setLng] = useState(shippingAddress.lng);\n\n  if (!userInfo) {\n    navigate('/signin');\n  }\n  const [fullName, setFullName] = useState(shippingAddress.fullName || '');\n  const [address, setAddress] = useState(shippingAddress.address || '');\n  const [city, setCity] = useState(shippingAddress.city || '');\n  const [postalCode, setPostalCode] = useState(\n    shippingAddress.postalCode || ''\n  );\n  const [country, setCountry] = useState(shippingAddress.country || '');\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const newLat = addressMap ? addressMap.lat : lat;\n    const newLng = addressMap ? addressMap.lng : lng;\n    if (addressMap) {\n      setLat(addressMap.lat);\n      setLng(addressMap.lng);\n    }\n    let moveOn = true;\n    // if (!newLat || !newLng) {\n    //   moveOn = window.confirm(\n    //     \"You did not set your location on map. Continue?\"\n    //   );\n    // }\n    if (moveOn) {\n      ctxDispatch({\n        type: 'SAVE_SHIPPING_ADDRESS',\n        payload: {\n          fullName,\n          address,\n          city,\n          postalCode,\n          country,\n          lat: newLat,\n          lng: newLng,\n        },\n      });\n      localStorage.setItem(\n        'shippingAddress',\n        JSON.stringify({\n          fullName,\n          address,\n          city,\n          postalCode,\n          country,\n          lat: newLat,\n          lng: newLng,\n        })\n      );\n      navigate('/payment');\n    }\n  };\n  const chooseOnMap = () => {\n    // ctxDispatch(\n    //   saveShippingAddress({\n    //     fullName,\n    //     address,\n    //     city,\n    //     postalCode,\n    //     country,\n    //     lat,\n    //     lng,\n    //   })\n    // );\n    navigate('/map');\n  };\n  return (\n    <div>\n      <CheckoutSteps step1 step2></CheckoutSteps>\n      <div className=\"container small-container\">\n        <Helmet>\n          <title>Shipping Address</title>\n        </Helmet>\n        <h1 className=\"my-3\">Shipping Address</h1>\n\n        <form onSubmit={submitHandler}>\n          <Form.Group className=\"mb-3\" controlId=\"fullName\">\n            <Form.Label>Full Name</Form.Label>\n            <Form.Control\n              value={fullName}\n              onChange={(e) => setFullName(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"address\">\n            <Form.Label>Address</Form.Label>\n            <Form.Control\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"city\">\n            <Form.Label>City</Form.Label>\n            <Form.Control\n              value={city}\n              onChange={(e) => setCity(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"postalCode\">\n            <Form.Label>Postal Code</Form.Label>\n            <Form.Control\n              value={postalCode}\n              onChange={(e) => setPostalCode(e.target.value)}\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"country\">\n            <Form.Label>Country</Form.Label>\n            <Form.Control\n              value={country}\n              onChange={(e) => setCountry(e.target.value)}\n              required\n            />\n          </Form.Group>\n\n          <div className=\"mb-3\">\n            <Button\n              id=\"chooseOnMap\"\n              type=\"button\"\n              variant=\"light\"\n              onClick={chooseOnMap}\n            >\n              Choose Location On Map\n            </Button>\n          </div>\n\n          <div className=\"mb-3\">\n            <Button variant=\"primary\" type=\"submit\">\n              Continue\n            </Button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}