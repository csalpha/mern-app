{"ast":null,"code":"import jwt from 'jsonwebtoken';\nimport mg from 'mailgun-js';\nexport const generateToken = user => {\n  return jwt.sign({\n    _id: user._id,\n    name: user.name,\n    email: user.email,\n    isAdmin: user.isAdmin,\n    isSeller: user.isSeller\n  }, process.env.JWT_SECRET || 'somethingsecret', {\n    expiresIn: '30d'\n  });\n};\nexport const isAuth = (req, res, next) => {\n  const authorization = req.headers.authorization;\n\n  if (authorization) {\n    const token = authorization.slice(7, authorization.length); // Bearer XXXXXX\n\n    jwt.verify(token, process.env.JWT_SECRET || 'somethingsecret', (err, decode) => {\n      if (err) {\n        res.status(401).send({\n          message: 'Invalid Token'\n        });\n      } else {\n        req.user = decode;\n        next();\n      }\n    });\n  } else {\n    res.status(401).send({\n      message: 'No Token'\n    });\n  }\n};\nexport const isAdmin = (req, res, next) => {\n  if (req.user && req.user.isAdmin) {\n    next();\n  } else {\n    res.status(401).send({\n      message: 'Invalid Admin Token'\n    });\n  }\n};\nexport const isSeller = (req, res, next) => {\n  if (req.user && req.user.isSeller) {\n    next();\n  } else {\n    res.status(401).send({\n      message: 'Invalid Seller Token'\n    });\n  }\n};\nexport const isSellerOrAdmin = (req, res, next) => {\n  if (req.user && (req.user.isSeller || req.user.isAdmin)) {\n    next();\n  } else {\n    res.status(401).send({\n      message: 'Invalid Admin/Seller Token'\n    });\n  }\n};\nexport const mailgun = () => mg({\n  apiKey: process.env.MAILGUN_API_KEY,\n  domain: process.env.MAILGUN_DOMIAN // // apiKey: '6790bbbd1fd1648862cbc364c371aaf3-1b237f8b-480880f1',\n  // // domain: 'sandboxd2ec4f7116544e0b8d139ceaa50ae2de.mailgun.org',\n\n});\nexport const payOrderEmailTemplate = order => {\n  return `<h1>Thanks for shopping with us</h1>\n  <p>\n  Hi ${order.user.name},</p>\n  <p>We have finished processing your order.</p>\n  <h2>[Order ${order._id}] (${order.createdAt.toString().substring(0, 10)})</h2>\n  <table>\n  <thead>\n  <tr>\n  <td><strong>Product</strong></td>\n  <td><strong>Quantity</strong></td>\n  <td><strong align=\"right\">Price</strong></td>\n  </thead>\n  <tbody>\n  ${order.orderItems.map(item => `\n    <tr>\n    <td>${item.name}</td>\n    <td align=\"center\">${item.quantity}</td>\n    <td align=\"right\"> €${item.price.toFixed(2)}</td>\n    </tr>\n  `).join('\\n')}\n  </tbody>\n  <tfoot>\n  <tr>\n  <td colspan=\"2\">Items Price:</td>\n  <td align=\"right\"> €${order.itemsPrice.toFixed(2)}</td>\n  </tr>\n  <tr>\n  <td colspan=\"2\">Tax Price:</td>\n  <td align=\"right\"> €${order.taxPrice.toFixed(2)}</td>\n  </tr>\n  <tr>\n  <td colspan=\"2\">Shipping Price:</td>\n  <td align=\"right\"> €${order.shippingPrice.toFixed(2)}</td>\n  </tr>\n  <tr>\n  <td colspan=\"2\"><strong>Total Price:</strong></td>\n  <td align=\"right\"><strong> €${order.totalPrice.toFixed(2)}</strong></td>\n  </tr>\n  <tr>\n  <td colspan=\"2\">Payment Method:</td>\n  <td align=\"right\">${order.paymentMethod}</td>\n  </tr>\n  </table>\n  <h2>Shipping address</h2>\n  <p>\n  ${order.shippingAddress.fullName},<br/>\n  ${order.shippingAddress.address},<br/>\n  ${order.shippingAddress.city},<br/>\n  ${order.shippingAddress.country},<br/>\n  ${order.shippingAddress.postalCode}<br/>\n  </p>\n  <hr/>\n  <p>\n  Thanks for shopping with us.\n  </p>\n  `;\n};","map":{"version":3,"sources":["/home/carlos/Documents/GitHub/mern-app/frontend/src/utils.js"],"names":["jwt","mg","generateToken","user","sign","_id","name","email","isAdmin","isSeller","process","env","JWT_SECRET","expiresIn","isAuth","req","res","next","authorization","headers","token","slice","length","verify","err","decode","status","send","message","isSellerOrAdmin","mailgun","apiKey","MAILGUN_API_KEY","domain","MAILGUN_DOMIAN","payOrderEmailTemplate","order","createdAt","toString","substring","orderItems","map","item","quantity","price","toFixed","join","itemsPrice","taxPrice","shippingPrice","totalPrice","paymentMethod","shippingAddress","fullName","address","city","country","postalCode"],"mappings":"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","sourcesContent":["import jwt from 'jsonwebtoken';\nimport mg from 'mailgun-js';\n\nexport const generateToken = (user) => {\n  return jwt.sign(\n    {\n      _id: user._id,\n      name: user.name,\n      email: user.email,\n      isAdmin: user.isAdmin,\n      isSeller: user.isSeller,\n    },\n    process.env.JWT_SECRET || 'somethingsecret',\n    {\n      expiresIn: '30d',\n    }\n  );\n};\n\nexport const isAuth = (req, res, next) => {\n  const authorization = req.headers.authorization;\n  if (authorization) {\n    const token = authorization.slice(7, authorization.length); // Bearer XXXXXX\n    jwt.verify(\n      token,\n      process.env.JWT_SECRET || 'somethingsecret',\n      (err, decode) => {\n        if (err) {\n          res.status(401).send({ message: 'Invalid Token' });\n        } else {\n          req.user = decode;\n          next();\n        }\n      }\n    );\n  } else {\n    res.status(401).send({ message: 'No Token' });\n  }\n};\nexport const isAdmin = (req, res, next) => {\n  if (req.user && req.user.isAdmin) {\n    next();\n  } else {\n    res.status(401).send({ message: 'Invalid Admin Token' });\n  }\n};\nexport const isSeller = (req, res, next) => {\n  if (req.user && req.user.isSeller) {\n    next();\n  } else {\n    res.status(401).send({ message: 'Invalid Seller Token' });\n  }\n};\nexport const isSellerOrAdmin = (req, res, next) => {\n  if (req.user && (req.user.isSeller || req.user.isAdmin)) {\n    next();\n  } else {\n    res.status(401).send({ message: 'Invalid Admin/Seller Token' });\n  }\n};\n\nexport const mailgun = () =>\n  mg({\n    apiKey: process.env.MAILGUN_API_KEY,\n    domain: process.env.MAILGUN_DOMIAN,\n    // // apiKey: '6790bbbd1fd1648862cbc364c371aaf3-1b237f8b-480880f1',\n    // // domain: 'sandboxd2ec4f7116544e0b8d139ceaa50ae2de.mailgun.org',\n\n  });\n\nexport const payOrderEmailTemplate = (order) => {\n  return `<h1>Thanks for shopping with us</h1>\n  <p>\n  Hi ${order.user.name},</p>\n  <p>We have finished processing your order.</p>\n  <h2>[Order ${order._id}] (${order.createdAt.toString().substring(0, 10)})</h2>\n  <table>\n  <thead>\n  <tr>\n  <td><strong>Product</strong></td>\n  <td><strong>Quantity</strong></td>\n  <td><strong align=\"right\">Price</strong></td>\n  </thead>\n  <tbody>\n  ${order.orderItems\n    .map(\n      (item) => `\n    <tr>\n    <td>${item.name}</td>\n    <td align=\"center\">${item.quantity}</td>\n    <td align=\"right\"> €${item.price.toFixed(2)}</td>\n    </tr>\n  `\n    )\n    .join('\\n')}\n  </tbody>\n  <tfoot>\n  <tr>\n  <td colspan=\"2\">Items Price:</td>\n  <td align=\"right\"> €${order.itemsPrice.toFixed(2)}</td>\n  </tr>\n  <tr>\n  <td colspan=\"2\">Tax Price:</td>\n  <td align=\"right\"> €${order.taxPrice.toFixed(2)}</td>\n  </tr>\n  <tr>\n  <td colspan=\"2\">Shipping Price:</td>\n  <td align=\"right\"> €${order.shippingPrice.toFixed(2)}</td>\n  </tr>\n  <tr>\n  <td colspan=\"2\"><strong>Total Price:</strong></td>\n  <td align=\"right\"><strong> €${order.totalPrice.toFixed(2)}</strong></td>\n  </tr>\n  <tr>\n  <td colspan=\"2\">Payment Method:</td>\n  <td align=\"right\">${order.paymentMethod}</td>\n  </tr>\n  </table>\n  <h2>Shipping address</h2>\n  <p>\n  ${order.shippingAddress.fullName},<br/>\n  ${order.shippingAddress.address},<br/>\n  ${order.shippingAddress.city},<br/>\n  ${order.shippingAddress.country},<br/>\n  ${order.shippingAddress.postalCode}<br/>\n  </p>\n  <hr/>\n  <p>\n  Thanks for shopping with us.\n  </p>\n  `;\n};\n"]},"metadata":{},"sourceType":"module"}